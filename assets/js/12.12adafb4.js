(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{420:function(s,t,a){"use strict";a.r(t);var e=a(2),r=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"docker命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker命令"}},[s._v("#")]),s._v(" Docker命令")]),s._v(" "),t("ul",[t("li",[s._v("基础命令")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -参数 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PEPOSITORY"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TAG"')]),s._v(" /bin/bash "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#开启容器")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--version")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看docker版本")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" search name "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#搜索容器镜像")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" pull name "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载容器镜像")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" images "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看已下载的容器镜像")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" rmi "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"IMGAE ID"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#删除镜像  或者")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" rmi "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PEPOSITORY"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TAG"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" tag "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"old PEPOSITORY"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"old TAG"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"new PEPOSITORY"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"new TAG"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#重命名")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看当前运行的容器 -a/--all # 加上不论运行不运行所有容器都会显示")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" stop  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PEPOSITORY"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TAG"')]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止容器")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CONTAINER ID"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#删除容器")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-it")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),s._v(" root 容器id "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用root权限进入容器")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" inspect "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{{.ID}}'")]),s._v(" 容器名 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" inspect "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PEPOSITORY"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TAG"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看容器更多信息，如网络、配置等各种信息")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" inspect - "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-format")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{{ .NetworkSettings.IPAddress }}'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看容器的ip地址")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" inspect "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--format")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{{ .Config.Hostname }}'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看容器的12位的主机名")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v("   容器ID:容器内路径  目的主机路径 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  从容器内拷贝文件到宿主机上")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v("  主机路径  容器ID:容器内路径 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从宿主机上拷贝文件到容器内")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PEPOSITORY"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TAG"')]),s._v(" /bin/bash "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在容器内创建一个新的bash会话")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" save "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" new_name.tar.gz "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PEPOSITORY"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TAG"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将镜像保存到本地")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" load "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" name.tar.gz "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#从本地文件导入镜像")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" commit "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CONTAINER ID"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"new PEPOSITORY"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"new TAG"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#基于现有容器创建镜像,修改名称都能做到")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" logs "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PEPOSITORY"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TAG"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看容器日志  -f # 实时打印日志")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("top")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PEPOSITORY"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TAG"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看容器占用主机的进程")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-it")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PEPOSITORY"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TAG"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" addr "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看分配给容器的网络ip")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" stats "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PEPOSITORY"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TAG"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看容器的统计信息，如使用的cpu、内存等")]),s._v("\n")])])]),t("ul",[t("li",[s._v("运行容器命令")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -参数 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PEPOSITORY"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TAG"')]),s._v(" /bin/bash "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#开启容器")]),s._v("\n    - 例如：docker run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-it")]),s._v(" nginx:latest /bin/bash\n    - 参数：\n        - "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 后台运行")]),s._v("\n        - "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定运行")]),s._v("\n        - "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 挂载存储")]),s._v("\n        - "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定映射端口")]),s._v("\n        - - "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-restart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("always "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 自动重启容器")]),s._v("\n")])])]),t("ul",[t("li",[s._v("docker exec进入停止的容器")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 下面这个方法不好")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" commit 837ffa1d4 user/temp "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 随便为失败镜像取一个名字 使用失败镜像的id来创建")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-it")]),s._v(" user/temp "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v("\n")])])]),t("ul",[t("li",[s._v("删除中间镜像缓存命令- - 在主机磁盘空间被占满时用来清理")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Exited"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1 }'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" stop\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Exited"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1 }'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" images"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" none"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $3 }'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" rmi\n")])])]),t("ul",[t("li",[t("p",[s._v("限制容器对主机资源使用的命令")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.bbsmax.com/A/GBJrmRpKz0/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.bbsmax.com/A/GBJrmRpKz0/"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("内存限制\n"),t("ul",[t("li",[t("p",[s._v("与操作系统类似，容器可使用的内存包括两部分：物理内存和 swap。 Docker 通过下面两组参数来控制容器内存的使用量。")]),s._v(" "),t("p",[t("code",[s._v("-m")]),s._v(" 或 "),t("code",[s._v("--memory")]),s._v("：设置内存的使用限额，例如 100M, 2G。")]),s._v(" "),t("p",[t("code",[s._v("--memory-swap")]),s._v("：设置 "),t("strong",[s._v("内存+swap")]),s._v(" 的使用限额。")])]),s._v(" "),t("li",[t("p",[s._v("当我们执行如下命令：docker run -m 200M --memory-swap=300M ubuntu")]),s._v(" "),t("ul",[t("li",[s._v("其含义是允许该容器最多使用 200M 的内存和 100M 的 swap。默认情况下，上面两组参数为 -1，即对容器内存和 swap 的使用没有限制。")])])])])])])]),s._v(" "),t("li",[t("p",[s._v("运行中的容器新增映射目录三种方式")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("运行中的容器新增映射目录")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.cnblogs.com/poloyy/p/13993832.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.cnblogs.com/poloyy/p/13993832.html"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("strong",[s._v("问题背景")])])]),s._v(" "),t("div",{staticClass:"language-jsx extra-class"},[t("pre",{pre:!0,attrs:{class:"language-jsx"}},[t("code",[s._v("docker run "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("d "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9999")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("name tomcat7 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("v "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("usr"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("local"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("webapps"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("usr"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("local"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("tomcat"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("webapps tomcat"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("\n")])])]),t("ul",[t("li",[t("p",[s._v("创建容器时，指定了目录映射（-v）")])]),s._v(" "),t("li",[t("p",[s._v("如果容器运行之后发现目录映射需要改怎么办？")])]),s._v(" "),t("li",[t("p",[s._v("一、"),t("strong",[s._v("删除原有容器，重新创建新的容器")])]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("删除容器")]),s._v(" "),t("code",[s._v("docker rm -f 容器ID/名字")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("重新创建容器")]),t("code",[s._v("docker run -d -p 9999:8080 -i --name tomcat7 -v /usr/local/tomcat/webapps:/usr/local/tomcat/webapps tomcat:7")])])]),s._v(" "),t("li",[t("p",[s._v("重新指定需要映射的目录")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("优点")])]),s._v(" "),t("p",[s._v("简单粗暴，在测试环境用的更多")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("缺点")])]),s._v(" "),t("p",[s._v("如果是数据库、服务器相关的容器，创建新的容器，又得重新配置相关东西了")])])])]),s._v(" "),t("li",[t("p",[s._v("二、"),t("strong",[s._v("修改容器配置文件（重点）")])]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("暂停 Docker 服务")]),t("code",[s._v("systemctl stop docker")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("进入 Docker 容器配置文件目录下")]),t("code",[s._v("cd /var/lib/docker/containers/")])]),s._v(" "),t("ul",[t("li",[s._v("ls")]),s._v(" "),t("li",[s._v("docker ps -aq (容器id就是一个文件夹）")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("进入某个容器的配置文件目录下")])]),s._v(" "),t("p",[s._v("容器ID 就是文件夹名称，可通过 docker ps -aq 来查看，不过这是缩写，对照起来看就行"),t("code",[s._v("cd c614b6db4aed0c8d0c742baa09ff4e2c24761703586460b68633d7b66e62c633ls")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("修改 config.v2.json")]),t("code",[s._v("vim config.v2.json")])]),s._v(" "),t("ul",[t("li",[s._v("Source对应主机上的目录 2处要保持一致")]),s._v(" "),t("li",[s._v("MountPoints Target Destination 对应容器上的目录 3处要保持一致")])]),s._v(" "),t("p",[s._v("输入 / ，搜索映射的目录（webapps）")]),s._v(" "),t("ul",[t("li",[s._v("也可以找到 MountPoints")]),s._v(" "),t("li",[s._v("若需要重新指定"),t("strong",[s._v("主机上")]),s._v("的映射目录，则改"),t("strong",[s._v("绿圈")]),s._v("的两个地方")]),s._v(" "),t("li",[s._v("若需要重新指定"),t("strong",[s._v("容器上")]),s._v("的映射目录，则改"),t("strong",[s._v("蓝圈")]),s._v("的两个地方")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("MountPoints 节点")])]),s._v(" "),t("ul",[t("li",[s._v("其实是一个 json 结构的数据，下图")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("重新启动 Docker 服务")]),t("code",[s._v("systemctl stop dockerdocker start tomcat7cd /usr/local/tomcat/webappsls")])]),s._v(" "),t("p",[s._v("重新映射目录成功！！")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("注意")])]),s._v(" "),t("ul",[t("li",[s._v("如果想修改 Docker 容器随着 Docker 服务启动而自启动，可看："),t("a",{attrs:{href:"https://www.cnblogs.com/poloyy/p/13985567.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.cnblogs.com/poloyy/p/13985567.html"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("如果想修改 Docker 的映射端口，可看："),t("a",{attrs:{href:"https://www.cnblogs.com/poloyy/p/13940554.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.cnblogs.com/poloyy/p/13940554.html"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("改 hostconfig.json 并不会成功哦")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("优点")]),s._v(" 直接操作配置文件没有副作用，算简单")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("缺点")]),s._v(" 需要暂停 Docker 服务，会影响其他正常运行的 Docker 容器")])])])]),s._v(" "),t("li",[t("p",[s._v("三、"),t("strong",[s._v("使用 docker commit 命令")])]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("停止 Docker 容器")]),t("code",[s._v("docker stop tomcat7")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("使用 commit 构建新镜像")]),t("code",[s._v("docker commit tomcat7 new_tomcat7")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("使用新镜像重新创建一个 Docker 容器")])]),s._v(" "),t("p",[t("code",[s._v("docker run -d -p 9999:8080 -i --name tomcat77 -v /usr/local/tomcat/webapps:/usr/local/tomcat/webapps tomcat:7")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("修改新容器的名字")])]),s._v(" "),t("p",[s._v("如果新容器想用回旧容器的名字，需要先删了旧容器，再改名"),t("code",[s._v("docker rm -f tomcat7 docker rename tomcat77 tomcat7 docker ps")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("优点")])]),s._v(" "),t("ul",[t("li",[s._v("无需停止 Docker 服务，不影响其他正在运行的容器")]),s._v(" "),t("li",[s._v("旧容器有的配置和数据，新容器也会有，不会造成数据或配置丢失，对新旧容器都没有任何影响")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("缺点")]),s._v(" 需要生成新的镜像和容器，管理镜像和容器的时间成本会上升")])])])])])])])])]),s._v(" "),t("h2",{attrs:{id:"dockerfile编写与构建镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile编写与构建镜像"}},[s._v("#")]),s._v(" Dockerfile编写与构建镜像")]),s._v(" "),t("ul",[t("li",[s._v("dockerfile文件编写\n"),t("ul",[t("li",[s._v("参考博客："),t("a",{attrs:{href:"https://www.cnblogs.com/regit/p/8295712.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.cnblogs.com/regit/p/8295712.html"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("Doerfile分为四部分：1.基础镜像信息 2.维护者信息 3.镜像操作指令 4.容器启动时执行指令\n"),t("ul",[t("li",[s._v("FROM：指定 base 镜像。")]),s._v(" "),t("li",[s._v("MAINTAINER：设置镜像的作者，可以是任意字符串。")]),s._v(" "),t("li",[s._v("COPY：将文件从 build context 复制到镜像。\n"),t("ul",[t("li",[s._v("COPY 支持两种形式：")]),s._v(" "),t("li",[s._v("COPY src dest")]),s._v(" "),t("li",[s._v('COPY ["src", "dest"]注意：src 只能指定 build context 中的文件或目录。')])])]),s._v(" "),t("li",[s._v("ADD：与 COPY 类似，从 build context 复制文件到镜像。不同的是，如果 src 是归档文件（tar, zip, tgz, xz 等），文件会被自动解压到 dest。")]),s._v(" "),t("li",[s._v("ENV：设置环境变量，环境变量可被后面的指令使用。例如：...ENV MY_VERSION 1.3RUN apt-get install -y mypackage=$MY_VERSION...EXPOSE：指定容器中的进程会监听某个端口，Docker 可以将该端口暴露出来。我们会在容器网络部分详细讨论。")]),s._v(" "),t("li",[s._v("VOLUME：将文件或目录声明为volume。")]),s._v(" "),t("li",[s._v("WORKDIR：为后面的 RUN, CMD, ENTRYPOINT, ADD 或 COPY 指令设置镜像中的当前工作目录。")]),s._v(" "),t("li",[s._v("RUN：在容器中运行指定的命令，RUN指令通常用于安装应用和软件包。")]),s._v(" "),t("li",[s._v("CMD：容器启动时运行指定的命令。Dockerfile 中可以有多个 CMD 指令，但只有最后一个生效。CMD 可以被 docker run 之后的参数替换。")]),s._v(" "),t("li",[s._v("ENTRYPOINT：设置容器启动时运行的命令，可让容器以应用程序或者服务的形式运行。Dockerfile 中可以有多个 ENTRYPOINT 指令，但只有最后一个生效。CMD 或docker run 之后的参数会被当做参数传递给 ENTRYPOINT。")])])])])]),s._v(" "),t("li",[s._v("基于Dockerfile文件创建Docker镜像\n"),t("ol",[t("li",[s._v("先创建一个名为Dockerfile #必须为这个名字 的文件并且写入参数\n"),t("ul",[t("li",[s._v("[root@cicd~]# cat /root/dockerfile")])]),s._v(" "),t("div",{staticClass:"language-python extra-class"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[s._v("    FROM centos"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("\n    RUN yum install "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("y vim\n    copy hello"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("root"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("\n")])])])]),s._v(" "),t("li",[s._v("然后创建images\n"),t("ul",[t("li",[s._v("docker build  -f /root/docker/Dockerfile -t centostest .\n"),t("ul",[t("li",[s._v("或者：docker build -t centostest .")]),s._v(" "),t("li",[s._v("build：创建镜像-t：为镜像指定名字.：指明 build context 为当前目录，我们也可以通过 -f 参数指定 Dockerfile 的位置")])])]),s._v(" "),t("li",[t("strong",[s._v("不使用缓存构建镜像")]),s._v(" "),t("ul",[t("li",[s._v("docker build --no-cache -t name .")])])])])])])])]),s._v(" "),t("h2",{attrs:{id:"docker-compose命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose命令"}},[s._v("#")]),s._v(" Docker-Compose命令")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" up "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 后台启动，已启动会进行更新")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" down\n")])])]),t("h2",{attrs:{id:"k8s命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#k8s命令"}},[s._v("#")]),s._v(" K8s命令")])])}),[],!1,null,null,null);t.default=r.exports}}]);